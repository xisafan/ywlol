name: iOS-ipa-build

on:
  workflow_dispatch:

jobs:
  build-ios:
    name: üéâ iOS Build
    runs-on: macos-latest
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      # 1. ÊòæÁ§∫ÁéØÂ¢É‰ø°ÊÅØ
      - name: Show environment info
        run: |
          flutter --version
          xcodebuild -version
          pod --version

      # 2. Ê∑±Â∫¶Ê∏ÖÁêÜÈ°πÁõÆ
      - name: Deep clean project
        run: |
          flutter clean
          rm -rf ios/Pods ios/Podfile.lock ios/.symlinks ~/.pub-cache
          rm -rf ~/Library/Developer/Xcode/DerivedData/* ~/Library/Caches/CocoaPods
          rm -rf ios/Flutter/Flutter.podspec

      # 3. ÂÖ≥ÈîÆ‰øÆÂ§çÔºöÈÖçÁΩÆCocoaPods‰ªìÂ∫ìÔºàÊ∑ªÂä†trunkÂπ∂‰ΩøÁî®ÂõΩÂÜÖÈïúÂÉèÔºâ
      - name: Configure CocoaPods repositories
        run: |
          # ÁßªÈô§ÂèØËÉΩÊçüÂùèÁöÑ‰ªìÂ∫ìÈÖçÁΩÆ
          pod repo remove trunk || true
          
          # Ê∑ªÂä†ÂõΩÂÜÖÈïúÂÉèÁöÑtrunk‰ªìÂ∫ìÔºàËß£ÂÜ≥ÂÆòÊñπÊ∫êËÆøÈóÆÈóÆÈ¢òÔºâ
          echo "Adding CocoaPods trunk repo from TUNA mirror..."
          pod repo add trunk https://mirrors.tuna.tsinghua.edu.cn/git/CocoaPods/Specs.git
          
          # È™åËØÅ‰ªìÂ∫ìÊòØÂê¶Ê∑ªÂä†ÊàêÂäü
          if pod repo list | grep -q "trunk"; then
            echo "‚úÖ Trunk repo added successfully"
          else
            echo "‚ùå Failed to add trunk repo"
            exit 1
          fi
          
          # Âº∫Âà∂Êõ¥Êñ∞‰ªìÂ∫ìÁ¥¢Âºï
          pod repo update trunk --verbose

      # 4. ÂêåÊ≠•FlutterÈ°πÁõÆÁöÑiOSÊúÄ‰ΩéÁâàÊú¨
      - name: Sync Flutter iOS deployment target
        run: |
          # ‰øÆÊîπFlutterÂÖ®Â±ÄÈÖçÁΩÆÊñá‰ª∂
          FLUTTER_XCCONFIG="ios/Flutter/Generated.xcconfig"
          if [ -f "$FLUTTER_XCCONFIG" ]; then
            sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET=.*/IPHONEOS_DEPLOYMENT_TARGET=12.0/' "$FLUTTER_XCCONFIG"
            echo "‚úÖ Updated $FLUTTER_XCCONFIG: IPHONEOS_DEPLOYMENT_TARGET=12.0"
          else
            mkdir -p ios/Flutter
            echo "IPHONEOS_DEPLOYMENT_TARGET=12.0" > "$FLUTTER_XCCONFIG"
            echo "FLUTTER_ROOT=$(flutter root)" >> "$FLUTTER_XCCONFIG"
            echo "‚úÖ Created $FLUTTER_XCCONFIG with iOS 12.0 target"
          fi

          # ‰øÆÊîπRunner.xcodeprojÈ°πÁõÆÁ∫ßÈÖçÁΩÆ
          cd ios
          sudo gem install xcodeproj --no-document
          ruby -e '
            require "xcodeproj"
            project = Xcodeproj::Project.open("Runner.xcodeproj")
            # Êõ¥Êñ∞È°πÁõÆÁ∫ßÈÉ®ÁΩ≤ÁõÆÊ†á
            project.build_configurations.each do |config|
              config.build_settings["IPHONEOS_DEPLOYMENT_TARGET"] = "12.0"
            end
            # Êõ¥Êñ∞ÊâÄÊúâtarget
            project.targets.each do |target|
              target.build_configurations.each do |config|
                config.build_settings["IPHONEOS_DEPLOYMENT_TARGET"] = "12.0"
              end
            end
            project.save
            puts "‚úÖ Updated Runner.xcodeproj to iOS 12.0"
          '

      # 5. ÂÆâË£ÖFlutter‰æùËµñ
      - name: Install Flutter dependencies
        run: |
          export IPHONEOS_DEPLOYMENT_TARGET=12.0
          flutter pub get
          # È™åËØÅbonsoir_darwin‰æùËµñ
          if grep -q "bonsoir_darwin" pubspec.lock; then
            echo "‚úÖ bonsoir_darwin found in pubspec.lock"
          else
            echo "‚ùå bonsoir_darwin missing in pubspec.lock"
            cat pubspec.lock
            exit 1
          fi

      # 6. ÁîüÊàêÂÖºÂÆπÁöÑPodfile
      - name: Generate compatible Podfile
        run: |
          cd ios
          cat > Podfile <<EOF
          platform :ios, '12.0'
          ENV['COCOAPODS_DISABLE_STATS'] = 'true'

          # ‰ΩøÁî®ÂõΩÂÜÖÈïúÂÉèÊ∫êÂä†ÈÄü‰æùËµñÊãâÂèñ
          source 'https://mirrors.tuna.tsinghua.edu.cn/git/CocoaPods/Specs.git'

          project 'Runner', {
            'Debug' => :debug,
            'Profile' => :release,
            'Release' => :release,
          }

          def flutter_root
            generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
            unless File.exist?(generated_xcode_build_settings_path)
              raise "#{generated_xcode_build_settings_path} must exist. Run 'flutter pub get' first."
            end
            File.foreach(generated_xcode_build_settings_path) do |line|
              matches = line.match(/FLUTTER_ROOT\=(.*)/)
              return matches[1].strip if matches
            end
            raise "FLUTTER_ROOT not found"
          end

          require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

          target 'Runner' do
            use_frameworks!
            use_modular_headers!
            flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
          end

          post_install do |installer|
            installer.pods_project.targets.each do |target|
              flutter_additional_ios_build_settings(target)
              # Áªü‰∏ÄÊèí‰ª∂ÁâàÊú¨ÂíåÁ≠æÂêçÈÖçÁΩÆ
              target.build_configurations.each do |config|
                config.build_settings["IPHONEOS_DEPLOYMENT_TARGET"] = "12.0"
                config.build_settings["DEVELOPMENT_TEAM"] = ""
                config.build_settings["CODE_SIGNING_REQUIRED"] = "NO"
                config.build_settings["CODE_SIGNING_ALLOWED"] = "NO"
                config.build_settings["OTHER_SWIFT_FLAGS"] ||= []
                config.build_settings["OTHER_SWIFT_FLAGS"] << "-DGLES_SILENCE_DEPRECATION"
              end
            end
          end
          EOF
          echo "‚úÖ Podfile generated"

      # 7. ÂÆâË£ÖCocoaPods‰æùËµñ
      - name: Install CocoaPods dependencies
        run: |
          cd ios
          export IPHONEOS_DEPLOYMENT_TARGET=12.0
          
          # ‰ΩøÁî®ÂõΩÂÜÖÊ∫êÂÆâË£Ö‰æùËµñÔºåÈÅøÂÖçÂÆòÊñπÊ∫êËÆøÈóÆÈóÆÈ¢ò
          pod install --verbose --no-repo-update
          
          # È™åËØÅbonsoir_darwinÂÆâË£Ö
          if [ -d "Pods/bonsoir_darwin" ]; then
            echo "‚úÖ bonsoir_darwin pod installed"
          else
            echo "‚ùå bonsoir_darwin pod missing"
            ls -la Pods/
            exit 1
          fi

      # 8. ÊûÑÂª∫iOS
      - name: Build iOS with xcodebuild
        run: |
          cd ios
          xcodebuild build \
            -workspace Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -sdk iphoneos \
            -derivedDataPath build/DerivedData \
            -archivePath build/Runner.xcarchive \
            IPHONEOS_DEPLOYMENT_TARGET=12.0 \
            DEVELOPMENT_TEAM="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            OTHER_SWIFT_FLAGS="-DGLES_SILENCE_DEPRECATION" \
            clean \
            -verbose

      # 9. ÊâìÂåÖIPA
      - name: Package IPA
        run: |
          APP_PATH="ios/build/Products/Release-iphoneos/Runner.app"
          if [ ! -d "$APP_PATH" ]; then
            echo "‚ùå Runner.app not found"
            exit 1
          fi
          
          IPA_DIR="ios/build/ipa"
          mkdir -p "$IPA_DIR/Payload"
          mv "$APP_PATH" "$IPA_DIR/Payload/"
          cd "$IPA_DIR"
          zip -qq -r -9 FlutterIpaExport.ipa Payload
          
          if [ -f "FlutterIpaExport.ipa" ]; then
            echo "‚úÖ IPA generated! Size: $(du -sh FlutterIpaExport.ipa)"
            cp FlutterIpaExport.ipa ../../build/ios/iphoneos/
          else
            echo "‚ùå IPA generation failed"
            exit 1
          fi

      # 10. ‰∏ä‰º†‰∫ßÁâ©
      - name: Upload IPA to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: flutter-ios-ipa
          path: ios/build/ios/iphoneos/FlutterIpaExport.ipa
          retention-days: 30
    
